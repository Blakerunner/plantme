{
  "swagger": "2.0",
  "info": {
    "description": "This is the API documentation for the Plantme, an API server dedicated to providing data about plants.",
    "version": "1.0.0",
    "title": "Plantme API"
  },
  "host": "plantme.blakerunner.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "plant",
      "description": "Operations about plants"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/plants": {
      "get": {
        "tags": [
          "plant"
        ],
        "summary": "Gets all plants",
        "description": "Fetches all plants from the database",
        "operationId": "getPlants",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "plant_auth": [
              "read:plants"
            ]
          }
        ]
      }
    },
    "/plant/{plantId}": {
      "get": {
        "tags": [
          "plant"
        ],
        "summary": "Find plant by ID",
        "description": "Returns a single plant",
        "operationId": "getPlantById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "description": "ID of plant to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plant"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Plant not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "plant"
        ],
        "summary": "Create a plant in the store with form data",
        "description": "Creates a plant",
        "operationId": "updatePlantWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "description": "ID of plant that needs to be created",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Created name of the plant",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Created status of the plant",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "plant_auth": [
              "write:plants",
              "read:plants"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "plant"
        ],
        "summary": "Deletes a plant",
        "description": "",
        "operationId": "deletePlant",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "plantId",
            "in": "path",
            "description": "Plant ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Plant not found"
          }
        },
        "security": [
          {
            "plant_auth": [
              "write:plants",
              "read:plants"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "plant"
        ],
        "summary": "Updates a plant",
        "description": "",
        "operationId": "updatePlant",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "plantId",
            "in": "path",
            "description": "Plant ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Plant not found"
          }
        },
        "security": [
          {
            "plant_auth": [
              "write:plants",
              "read:plants"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "plant_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify plants in your account",
        "read:pets": "read your plants"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Plant": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "Plant status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Plant"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}